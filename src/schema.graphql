# import * from './generated/prisma.graphql'

type SuccessMessage {
    message: String
}

type Mutation {
    createEvent(title: String!, description: String!, price: Int!, start: String!, end: String!, image: String, largeImage: String): Event!
    updateEvent(id: ID!, title: String, description: String, price: Int, start: String, end: String): Event!
    deleteEvent(id: ID!): Event
    signup(email: String!, password: String!, name: String!): User!
    signin(email: String!, password: String!): User!
    signout: SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
    createBooking(name: String!, email: String!, phone: Int!, message: String!, event: EventCreateOneInput, createdAt: DateTime, updatedAt: DateTime): Booking!
}

type Query {
    events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, first: Int): [Event]!
    event(where: EventWhereUniqueInput!): Event
    eventsConnection(where: EventWhereInput): EventConnection!
    me: User
    bookings(where: BookingWhereInput, orderBy: BookingOrderByInput): [Booking]!
    booking(where: BookingWhereUniqueInput!): Booking
}

type User{
    id: ID!
    name: String!
    email: String!
}